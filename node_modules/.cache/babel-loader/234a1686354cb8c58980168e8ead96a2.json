{"ast":null,"code":"import _classCallCheck from \"H:\\\\music\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"H:\\\\music\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"H:\\\\music\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"H:\\\\music\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"H:\\\\music\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"H:\\\\music\\\\react-music-player\\\\src\\\\views\\\\Playlist\\\\index.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport InfoList from '@components/List';\nimport InfoHeader from './header';\nimport * as actionCreators from './store/actionCreators';\nimport './style.less';\n\nvar PlaylistInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlaylistInfo, _Component);\n\n  function PlaylistInfo() {\n    _classCallCheck(this, PlaylistInfo);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PlaylistInfo).apply(this, arguments));\n  }\n\n  _createClass(PlaylistInfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var id = this.props.match.params.id;\n      this.props.handleChange(id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var playlist = this.props.playlistInfo.playlist;\n\n      var _ref = playlist || {},\n          tracks = _ref.tracks,\n          coverImgUrl = _ref.coverImgUrl;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, playlist ? React.createElement(\"div\", {\n        className: \"playlist-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"\",\n        alt: \"background\",\n        className: \"background\",\n        key: \"bgc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"playlist-info\",\n        key: \"playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(InfoHeader, {\n        playlist: playlist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(InfoList, {\n        tracks: tracks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }))) : null);\n    }\n  }]);\n\n  return PlaylistInfo;\n}(Component);\n\nvar mapState = function mapState(state) {\n  return {\n    playlistInfo: state.playlistInfo,\n    starredList: state.playQueue.starredList\n  };\n};\n\nvar mapDispath = function mapDispath(dispatch) {\n  return {\n    handleChange: function handleChange(id) {\n      dispatch(actionCreators.changePlayList(id));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispath)(PlaylistInfo);","map":{"version":3,"sources":["H:\\music\\react-music-player\\src\\views\\Playlist\\index.js"],"names":["React","Component","Fragment","connect","InfoList","InfoHeader","actionCreators","PlaylistInfo","id","props","match","params","handleChange","playlist","playlistInfo","tracks","coverImgUrl","mapState","state","starredList","playQueue","mapDispath","dispatch","changePlayList"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,UAAvB;AACA,OAAO,KAAKC,cAAZ,MAAgC,wBAAhC;AACA,OAAO,cAAP;;IAEMC,Y;;;;;;;;;;;;;wCACiB;AAAA,UACPC,EADO,GACA,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MADjB,CACPH,EADO;AAEf,WAAKC,KAAL,CAAWG,YAAX,CAAwBJ,EAAxB;AACH;;;6BACO;AAAA,UACIK,QADJ,GACiB,KAAKJ,KAAL,CAAWK,YAD5B,CACID,QADJ;;AAAA,iBAE4BA,QAAQ,IAAI,EAFxC;AAAA,UAEIE,MAFJ,QAEIA,MAFJ;AAAA,UAEYC,WAFZ,QAEYA,WAFZ;;AAGJ,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKH,QAAQ,GACL;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAC,EAAT;AAAY,QAAA,GAAG,EAAC,YAAhB;AAA6B,QAAA,SAAS,EAAC,YAAvC;AAAoD,QAAA,GAAG,EAAC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,GAAG,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AACI,QAAA,QAAQ,EAAEA,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAII,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAEE,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CAFJ,CADK,GAUL,IAXR,CADJ;AAeH;;;;EAvBsBd,S;;AAyB3B,IAAMgB,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAW;AACxBJ,IAAAA,YAAY,EAAEI,KAAK,CAACJ,YADI;AAExBK,IAAAA,WAAW,EAAED,KAAK,CAACE,SAAN,CAAgBD;AAFL,GAAX;AAAA,CAAjB;;AAKA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD;AAAA,SAAc;AAC7BV,IAAAA,YAD6B,wBAChBJ,EADgB,EACb;AACZc,MAAAA,QAAQ,CAAChB,cAAc,CAACiB,cAAf,CAA8Bf,EAA9B,CAAD,CAAR;AACH;AAH4B,GAAd;AAAA,CAAnB;;AAMA,eAAeL,OAAO,CAACc,QAAD,EAAUI,UAAV,CAAP,CAA6Bd,YAA7B,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport InfoList from '@components/List';\r\nimport InfoHeader from './header';\r\nimport * as actionCreators from './store/actionCreators';\r\nimport './style.less';\r\n\r\nclass PlaylistInfo extends Component {\r\n    componentDidMount(){\r\n        const { id } = this.props.match.params;\r\n        this.props.handleChange(id)\r\n    }\r\n    render(){\r\n        const { playlist } = this.props.playlistInfo;\r\n        const { tracks, coverImgUrl } = playlist || {} ;\r\n        return(\r\n            <Fragment>\r\n                {playlist ? (\r\n                    <div className=\"playlist-wrapper\">\r\n                        <img src=\"\" alt=\"background\" className=\"background\" key=\"bgc\"/>\r\n                        <div className=\"playlist-info\" key=\"playlist\">\r\n                            <InfoHeader\r\n                                playlist={playlist}\r\n                            />\r\n                            <InfoList tracks={tracks}/>\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapState = (state) =>({\r\n    playlistInfo: state.playlistInfo,\r\n    starredList: state.playQueue.starredList\r\n});\r\n\r\nconst mapDispath = (dispatch) =>({\r\n    handleChange(id){\r\n        dispatch(actionCreators.changePlayList(id))\r\n    }\r\n});\r\n\r\nexport default connect(mapState,mapDispath)(PlaylistInfo);\r\n"]},"metadata":{},"sourceType":"module"}