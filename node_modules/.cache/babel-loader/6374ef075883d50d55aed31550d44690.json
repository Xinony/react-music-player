{"ast":null,"code":"import _classCallCheck from \"H:\\\\music\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"H:\\\\music\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"H:\\\\music\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"H:\\\\music\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"H:\\\\music\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"H:\\\\music\\\\react-music-player\\\\src\\\\views\\\\Song\\\\index.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport InfoList from '@components/List';\nimport { star, cancelStar } from '@common/store/actionCreators';\nimport InfoHeader from './header';\nimport * as actionCreators from './store/actionCreators';\nimport './style.less';\n\nvar PlaylistInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlaylistInfo, _Component);\n\n  function PlaylistInfo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlaylistInfo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlaylistInfo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.beforeStar = function () {\n      // 把这个方法传递给子组件，子组件点击是触发\n      var playlist = _this.props.playlistInfo.playlist;\n      var id = playlist.id,\n          name = playlist.name,\n          coverImgUrl = playlist.coverImgUrl;\n      var parseList = {\n        id: id,\n        name: name,\n        coverImgUrl: coverImgUrl\n      };\n\n      _this.props.getStar(parseList);\n    };\n\n    _this.beforeCancelStar = function () {\n      //与上面方法的效果相反，但是传递是一样的\n      var playlist = _this.props.playlistInfo.playlist;\n      var id = playlist.id;\n\n      _this.props.cancelItemStar(id);\n    };\n\n    return _this;\n  }\n\n  _createClass(PlaylistInfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var id = this.props.match.params.id;\n      this.props.handleChange(id);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      //处理组件相同路由切换页面不刷新的问题\n      var id = nextProps.match.params.id;\n      var preId = this.props.match.params.id;\n\n      if (id !== preId) {\n        nextProps.handleChange(id);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var playlist = this.props.playlistInfo.playlist;\n\n      var _ref = playlist || {},\n          tracks = _ref.tracks,\n          coverImgUrl = _ref.coverImgUrl;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, playlist ? React.createElement(\"div\", {\n        className: \"playlist-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: coverImgUrl,\n        alt: \"background\",\n        className: \"background\",\n        key: \"bgc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"playlist-info\",\n        key: \"playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(InfoHeader, {\n        playlist: playlist,\n        beforeStar: this.beforeStar,\n        beforeCancelStar: this.beforeCancelStar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(InfoList, {\n        tracks: tracks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }))) : null);\n    }\n  }]);\n\n  return PlaylistInfo;\n}(Component);\n\nvar mapState = function mapState(state) {\n  return {\n    playlistInfo: state.playlistInfo,\n    starredList: state.playQueue.starredList\n  };\n};\n\nvar mapDispath = function mapDispath(dispatch) {\n  return {\n    handleChange: function handleChange(id) {\n      dispatch(actionCreators.changePlayList(id));\n    },\n    getStar: function getStar(item) {\n      dispatch(star(item));\n    },\n    cancelItemStar: function cancelItemStar(id) {\n      dispatch(cancelStar(id));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispath)(PlaylistInfo);","map":{"version":3,"sources":["H:\\music\\react-music-player\\src\\views\\Song\\index.js"],"names":["React","Component","Fragment","connect","InfoList","star","cancelStar","InfoHeader","actionCreators","PlaylistInfo","beforeStar","playlist","props","playlistInfo","id","name","coverImgUrl","parseList","getStar","beforeCancelStar","cancelItemStar","match","params","handleChange","nextProps","preId","tracks","mapState","state","starredList","playQueue","mapDispath","dispatch","changePlayList","item"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport InfoList from '@components/List';\r\nimport { star, cancelStar } from '@common/store/actionCreators'\r\nimport InfoHeader from './header';\r\nimport * as actionCreators from './store/actionCreators';\r\nimport './style.less';\r\n\r\nclass PlaylistInfo extends Component {\r\n    componentDidMount(){\r\n        const { id } = this.props.match.params;\r\n        this.props.handleChange(id);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        //处理组件相同路由切换页面不刷新的问题\r\n        const { id } = nextProps.match.params;\r\n        const preId = this.props.match.params.id;\r\n        if(id !== preId){\r\n            nextProps.handleChange(id);\r\n        }\r\n    }\r\n\r\n    beforeStar = () =>{\r\n        // 把这个方法传递给子组件，子组件点击是触发\r\n        const { playlist } = this.props.playlistInfo;\r\n        const { id, name, coverImgUrl } = playlist;\r\n        const parseList = {\r\n            id,\r\n            name,\r\n            coverImgUrl\r\n        };\r\n        this.props.getStar(parseList);\r\n    }\r\n    beforeCancelStar = () =>{\r\n        //与上面方法的效果相反，但是传递是一样的\r\n        const { playlist } = this.props.playlistInfo;\r\n        const { id } = playlist;\r\n        this.props.cancelItemStar(id);\r\n    }\r\n    render(){\r\n        const { playlist } = this.props.playlistInfo;\r\n        const { tracks, coverImgUrl } = playlist || {} ;\r\n        return(\r\n            <Fragment>\r\n                {playlist ? (\r\n                    <div className=\"playlist-wrapper\">\r\n                        <img src={coverImgUrl} alt=\"background\" className=\"background\" key=\"bgc\"/>\r\n                        <div className=\"playlist-info\" key=\"playlist\">\r\n                            <InfoHeader\r\n                                playlist={playlist}\r\n                                beforeStar={this.beforeStar}\r\n                                beforeCancelStar={this.beforeCancelStar}\r\n                            />\r\n                            <InfoList tracks={tracks}/>\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapState = (state) =>({\r\n    playlistInfo: state.playlistInfo,\r\n    starredList: state.playQueue.starredList\r\n});\r\n\r\nconst mapDispath = (dispatch) =>({\r\n    handleChange(id){\r\n        dispatch(actionCreators.changePlayList(id));\r\n    },\r\n    getStar(item){\r\n        dispatch(star(item));\r\n    },\r\n    cancelItemStar(id){\r\n        dispatch(cancelStar(id))\r\n    }\r\n});\r\n\r\nexport default connect(mapState,mapDispath)(PlaylistInfo);\r\n"]},"metadata":{},"sourceType":"module"}