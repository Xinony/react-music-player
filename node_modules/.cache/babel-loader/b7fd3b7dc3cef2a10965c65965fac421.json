{"ast":null,"code":"// import axios from 'axios';\n// import { message } from 'antd';\nimport * as actionTypes from './actionTypes';\n\nvar initStarredListAct = function initStarredListAct(allList) {\n  return {\n    type: actionTypes.INIT_STARRED_LIST,\n    payload: allList\n  };\n}; // 初始化本地数据操作\n\n\nexport var initStarredList = function initStarredList() {\n  return function (dispatch) {\n    var allStarredList = JSON.parse(localStorage.getItem('allStarredList')) || [];\n    dispatch(initStarredListAct(allStarredList));\n  };\n}; //收藏歌单操作\n\nexport var star = function star(item) {\n  return function (dispatch) {\n    //先处理本地储存\n    var allStarredList = JSON.parse(localStorage.getItem('allStarredList')) || [];\n    allStarredList.push(item); // 重新初始化本地储存（把push进去的值，重新添加到本地储存中）\n\n    localStorage.setItem('allStarredList', JSON.stringify(allStarredList));\n    dispatch(initStarredListAct(allStarredList));\n  };\n};\nexport var cancelStar = function cancelStar(id) {\n  return function (dispatch) {\n    var index;\n    var allStarredList = JSON.parse(localStorage.getItem('allStarredList')) || []; //使用循环查找出需要取消收藏的歌单，然后把id（allStarredList中的id）传出来\n\n    for (var i = 0; i < allStarredList.length; i++) {\n      var list = allStarredList[i];\n\n      if (list.id === id) {\n        index = i;\n      }\n    }\n\n    allStarredList.splice(index, 1);\n    localStorage.setItem('allStarredList', JSON.stringify(allStarredList));\n    dispatch(initStarredListAct(allStarredList));\n  };\n};","map":{"version":3,"sources":["H:\\music\\react-music-player\\src\\common\\store\\actionCreators.js"],"names":["actionTypes","initStarredListAct","allList","type","INIT_STARRED_LIST","payload","initStarredList","dispatch","allStarredList","JSON","parse","localStorage","getItem","star","item","push","setItem","stringify","cancelStar","id","index","i","length","list","splice"],"mappings":"AAAA;AACA;AACA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD;AAAA,SAAc;AACrCC,IAAAA,IAAI,EAAEH,WAAW,CAACI,iBADmB;AAErCC,IAAAA,OAAO,EAAEH;AAF4B,GAAd;AAAA,CAA3B,C,CAIA;;;AACA,OAAO,IAAMI,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAM,UAACC,QAAD,EAAc;AAC/C,QAAMC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,KAAsD,EAA7E;AACAL,IAAAA,QAAQ,CAACN,kBAAkB,CAACO,cAAD,CAAnB,CAAR;AACH,GAH8B;AAAA,CAAxB,C,CAIP;;AACA,OAAO,IAAMK,IAAI,GAAG,SAAPA,IAAO,CAAAC,IAAI;AAAA,SAAI,UAACP,QAAD,EAAc;AACtC;AACA,QAAMC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,KAAsD,EAA7E;AACAJ,IAAAA,cAAc,CAACO,IAAf,CAAoBD,IAApB,EAHsC,CAItC;;AACAH,IAAAA,YAAY,CAACK,OAAb,CAAqB,gBAArB,EAAsCP,IAAI,CAACQ,SAAL,CAAeT,cAAf,CAAtC;AACAD,IAAAA,QAAQ,CAACN,kBAAkB,CAACO,cAAD,CAAnB,CAAR;AACH,GAPuB;AAAA,CAAjB;AAQP,OAAO,IAAMU,UAAU,GAAG,SAAbA,UAAa,CAAAC,EAAE;AAAA,SAAI,UAACZ,QAAD,EAAc;AAC1C,QAAIa,KAAJ;AACA,QAAMZ,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,KAAsD,EAA7E,CAF0C,CAG1C;;AACA,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,cAAc,CAACc,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,UAAME,IAAI,GAAGf,cAAc,CAACa,CAAD,CAA3B;;AACA,UAAGE,IAAI,CAACJ,EAAL,KAAYA,EAAf,EAAmB;AACfC,QAAAA,KAAK,GAAGC,CAAR;AACH;AACJ;;AACDb,IAAAA,cAAc,CAACgB,MAAf,CAAsBJ,KAAtB,EAA4B,CAA5B;AACAT,IAAAA,YAAY,CAACK,OAAb,CAAqB,gBAArB,EAAsCP,IAAI,CAACQ,SAAL,CAAeT,cAAf,CAAtC;AACAD,IAAAA,QAAQ,CAACN,kBAAkB,CAACO,cAAD,CAAnB,CAAR;AACH,GAb2B;AAAA,CAArB","sourcesContent":["// import axios from 'axios';\r\n// import { message } from 'antd';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nconst initStarredListAct = (allList) => ({\r\n    type: actionTypes.INIT_STARRED_LIST,\r\n    payload: allList\r\n});\r\n// 初始化本地数据操作\r\nexport const initStarredList = () => (dispatch) => {\r\n    const allStarredList = JSON.parse(localStorage.getItem('allStarredList')) || [];\r\n    dispatch(initStarredListAct(allStarredList));\r\n}\r\n//收藏歌单操作\r\nexport const star = item => (dispatch) => {\r\n    //先处理本地储存\r\n    const allStarredList = JSON.parse(localStorage.getItem('allStarredList')) || [];\r\n    allStarredList.push(item);\r\n    // 重新初始化本地储存（把push进去的值，重新添加到本地储存中）\r\n    localStorage.setItem('allStarredList',JSON.stringify(allStarredList));\r\n    dispatch(initStarredListAct(allStarredList));\r\n}\r\nexport const cancelStar = id => (dispatch) => {\r\n    let index;\r\n    const allStarredList = JSON.parse(localStorage.getItem('allStarredList')) || [];\r\n    //使用循环查找出需要取消收藏的歌单，然后把id（allStarredList中的id）传出来\r\n    for (let i = 0; i < allStarredList.length; i++) {\r\n        const list = allStarredList[i];\r\n        if(list.id === id) {\r\n            index = i;\r\n        }\r\n    }\r\n    allStarredList.splice(index,1);\r\n    localStorage.setItem('allStarredList',JSON.stringify(allStarredList));\r\n    dispatch(initStarredListAct(allStarredList));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}