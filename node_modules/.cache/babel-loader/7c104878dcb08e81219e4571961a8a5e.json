{"ast":null,"code":"import _classCallCheck from \"H:\\\\music\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"H:\\\\music\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"H:\\\\music\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"H:\\\\music\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"H:\\\\music\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"H:\\\\music\\\\react-music-player\\\\src\\\\components\\\\Footer\\\\index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'antd';\nimport * as actionCreators from '@common/store/actionCreators';\nimport { formatDuration, formatCurrentTime } from '@src/utils';\nimport './style.less';\n\nvar Footer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Footer, _Component);\n\n  function Footer() {\n    var _this;\n\n    _classCallCheck(this, Footer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Footer).call(this));\n\n    _this.toPlay = function () {\n      _this.audio.play();\n\n      _this.setState({\n        ppIcon: 'pause-circle'\n      });\n\n      _this.updatePlayingStatus(true); // this.audio.addEventListener('durationchange',console.log(1))\n\n    };\n\n    _this.toPause = function () {\n      _this.audio.pause();\n\n      _this.setState({\n        ppIcon: 'play-circle'\n      });\n    };\n\n    _this.syncTime = function () {\n      var song = _this.props.playQueue.song;\n      var duration = song.dt || song.duration;\n      var timeScale = _this.audio.currentTime * 1000 / duration;\n\n      _this.setState({\n        curProgressBarWidth: \"\".concat(timeScale * 100, \"%\"),\n        cdt: formatCurrentTime(_this.audio.currentTime)\n      });\n\n      _this.updateCurrentTime();\n    };\n\n    _this.updateCurrentTime = function () {\n      _this.props.indexUpdatePlayerStatus({\n        currentTime: _this.audio.currentTime\n      });\n    };\n\n    _this.updatePlayingStatus = function (status) {\n      _this.props.indexUpdatePlayerStatus({\n        isPlaying: status\n      });\n    };\n\n    _this.togglePlay = function () {\n      if (_this.audio.paused || _this.audio.ended) {\n        _this.toPlay();\n      } else {\n        _this.toPause();\n      }\n    };\n\n    _this.setCurTime = function (e) {\n      var _this$progressBar$get = _this.progressBar.getBoundingClientRect(),\n          left = _this$progressBar$get.left;\n\n      var distance = e.clientX - left;\n      var scale = distance / _this.progressBar.offsetWidth; // audio 标签内有duration，数据对象中也有dt，不过dt = 1000 * duration\n\n      _this.audio.currentTime = _this.audio.duration * scale;\n\n      _this.setState({\n        curProgressBarWidth: \"\".concat(scale * 100, \"%\")\n      });\n\n      console.log(_this.state.curProgressBarWidth);\n\n      _this.updateCurrentTime();\n    };\n\n    _this.toggleMute = function () {\n      _this.audio.muted = !_this.audio.muted;\n\n      if (_this.audio.muted) {\n        _this.setState({\n          lastVolumeIcon: _this.state.volumeIcon,\n          volumeIcon: '🔇'\n        });\n      } else {\n        _this.setState({\n          volumeIcon: _this.state.lastVolumeIcon\n        });\n      }\n    };\n\n    _this.setVol = function (e) {\n      var _this$valBar$getBound = _this.valBar.getBoundingClientRect(),\n          left = _this$valBar$getBound.left;\n\n      var distance = e.clientX - left;\n      var scale = distance / _this.valBar.offsetWidth;\n      _this.audio.volume = scale;\n      var volumeIcon;\n\n      if (scale > 0 && scale < 0.4) {\n        volumeIcon = '🔉';\n      } else if (scale >= 0.4 && scale) {\n        volumeIcon = '🔊';\n      } else if (true) {}\n\n      console.log(1); // console.log(left);\n    };\n\n    _this.state = {\n      cdt: '00:00',\n      curProgressBarWidth: 0,\n      curVolBarWidth: '50%',\n      ppIcon: 'play-circle',\n      lastVolumeIcon: '',\n      volumeIcon: '🔊',\n      mode: 'listloop',\n      modeIcon: React.createElement(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"list\",\n        title: \"\\u5217\\u8868\\u5FAA\\u73AF\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"\\uD83D\\uDD01\"),\n      showReadyList: false\n    };\n    return _this;\n  }\n\n  _createClass(Footer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          volumeIcon = _this$state.volumeIcon,\n          modeIcon = _this$state.modeIcon,\n          ppIcon = _this$state.ppIcon,\n          curProgressBarWidth = _this$state.curProgressBarWidth;\n      var song = this.props.playQueue.song;\n      var duration = song.duration || song.dt;\n      return React.createElement(\"footer\", {\n        key: \"player\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"audio\", {\n        key: \"audio\",\n        src: song.url,\n        ref: function ref(node) {\n          _this2.audio = node;\n        },\n        onTimeUpdate: this.syncTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"\\u60A8\\u7684\\u6D4F\\u89C8\\u5668\\u4E0D\\u652F\\u6301audio\\u6807\\u7B7E\\uFF0C\\u65E0\\u6CD5\\u64AD\\u653E\\u97F3\\u4E50\"), React.createElement(\"div\", {\n        className: \"player-album\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: \"/lyric/\".concat(song.id)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: song.album.picUrl,\n        alt: \"album-img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"player-btns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"backward\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(Icon, {\n        type: ppIcon,\n        onClick: this.togglePlay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(Icon, {\n        type: \"forward\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"player-state\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"player-state-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, song.name), React.createElement(\"div\", {\n        className: \"artist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"花粥\")), React.createElement(\"div\", {\n        className: \"duration\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, this.state.cdt, \"/\", formatDuration(duration))), React.createElement(\"div\", {\n        className: \"player-state-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"progress-bar\",\n        ref: function ref(node) {\n          _this2.progressBar = node;\n        },\n        onClick: function onClick(e) {\n          _this2.setCurTime(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"current-progress\",\n        style: {\n          width: \"\".concat(curProgressBarWidth)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"vol-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"vol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: this.toggleMute,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, volumeIcon), React.createElement(\"div\", {\n        className: \"vol-bar\",\n        onClick: this.setVol,\n        ref: function ref(node) {\n          _this2.valBar = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"current-vol\",\n        style: {\n          width: \"10%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"player-extra\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mode-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, modeIcon), React.createElement(Icon, {\n        type: \"heart-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(Icon, {\n        type: \"bars\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Footer;\n}(Component);\n\nvar mapState = function mapState(state) {\n  return {\n    playQueue: state.playQueue\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    indexChangeSong: function indexChangeSong() {\n      dispatch(actionCreators.changeSong());\n    },\n    indexUpdatePlayerStatus: function indexUpdatePlayerStatus(status) {\n      dispatch(actionCreators.updatePlayerStatus(status));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(Footer);","map":{"version":3,"sources":["H:\\music\\react-music-player\\src\\components\\Footer\\index.js"],"names":["React","Component","connect","Link","Icon","actionCreators","formatDuration","formatCurrentTime","Footer","toPlay","audio","play","setState","ppIcon","updatePlayingStatus","toPause","pause","syncTime","song","props","playQueue","duration","dt","timeScale","currentTime","curProgressBarWidth","cdt","updateCurrentTime","indexUpdatePlayerStatus","status","isPlaying","togglePlay","paused","ended","setCurTime","e","progressBar","getBoundingClientRect","left","distance","clientX","scale","offsetWidth","console","log","state","toggleMute","muted","lastVolumeIcon","volumeIcon","setVol","valBar","volume","curVolBarWidth","mode","modeIcon","showReadyList","url","node","pathname","id","album","picUrl","name","width","mapState","mapDispatch","dispatch","indexChangeSong","changeSong","updatePlayerStatus"],"mappings":"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","sourcesContent":["import React , { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon } from 'antd';\r\nimport * as actionCreators from '@common/store/actionCreators';\r\nimport { formatDuration, formatCurrentTime } from '@src/utils'\r\nimport './style.less';\r\n\r\nclass Footer extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            cdt: '00:00',\r\n            curProgressBarWidth: 0,\r\n            curVolBarWidth: '50%',\r\n            ppIcon: 'play-circle',\r\n            lastVolumeIcon: '',\r\n            volumeIcon: '🔊',\r\n            mode: 'listloop',\r\n            modeIcon: <span role=\"img\" aria-label=\"list\" title=\"列表循环\">🔁</span>,\r\n            showReadyList: false,\r\n        }\r\n    }\r\n    toPlay = () =>{\r\n        this.audio.play();\r\n        this.setState({ppIcon:'pause-circle'});\r\n        this.updatePlayingStatus(true);\r\n        // this.audio.addEventListener('durationchange',console.log(1))\r\n    }\r\n    toPause = () =>{\r\n        this.audio.pause();\r\n        this.setState({ppIcon:'play-circle'});\r\n    }\r\n    syncTime = () =>{\r\n        const { song } = this.props.playQueue;\r\n        const duration = song.dt || song.duration;\r\n        const timeScale = (this.audio.currentTime * 1000) / duration;\r\n        this.setState({\r\n            curProgressBarWidth: `${timeScale * 100}%`,\r\n            cdt: formatCurrentTime(this.audio.currentTime)\r\n        })\r\n        this.updateCurrentTime();\r\n    }\r\n    updateCurrentTime = () =>{\r\n        this.props.indexUpdatePlayerStatus({\r\n            currentTime: this.audio.currentTime,\r\n        })\r\n    }\r\n    updatePlayingStatus = (status) =>{\r\n        this.props.indexUpdatePlayerStatus({\r\n            isPlaying:status\r\n        })\r\n    }\r\n    togglePlay = () =>{\r\n        if(this.audio.paused || this.audio.ended){\r\n            this.toPlay();\r\n        }else{\r\n            this.toPause();\r\n        }\r\n    }\r\n    setCurTime = (e) =>{\r\n        const { left } = this.progressBar.getBoundingClientRect();\r\n        const distance = e.clientX - left;\r\n        const scale = distance / this.progressBar.offsetWidth;\r\n        // audio 标签内有duration，数据对象中也有dt，不过dt = 1000 * duration\r\n        this.audio.currentTime = this.audio.duration * scale;\r\n        this.setState({\r\n            curProgressBarWidth: `${scale * 100}%`,\r\n        })\r\n        console.log(this.state.curProgressBarWidth);\r\n        this.updateCurrentTime();\r\n    }\r\n    // 声音\r\n    toggleMute = () =>{\r\n        this.audio.muted = !this.audio.muted;\r\n        if(this.audio.muted){\r\n            this.setState({\r\n                lastVolumeIcon: this.state.volumeIcon,\r\n                volumeIcon: '🔇'\r\n            })\r\n        }else {\r\n            this.setState({\r\n                volumeIcon: this.state.lastVolumeIcon\r\n            })\r\n        }\r\n    }\r\n    setVol = (e) =>{\r\n        const { left } = this.valBar.getBoundingClientRect();\r\n        const distance = e.clientX - left;\r\n        const scale = distance / this.valBar.offsetWidth;\r\n        this.audio.volume = scale;\r\n        let volumeIcon\r\n        if(scale > 0 && scale < 0.4){\r\n            volumeIcon = '🔉'\r\n        }else if(scale >= 0.4 && scale){\r\n            volumeIcon = '🔊'\r\n        }else if (true) {\r\n\r\n        }\r\n        console.log(1);\r\n        // console.log(left);\r\n    }\r\n    render(){\r\n        const { volumeIcon, modeIcon, ppIcon ,curProgressBarWidth} = this.state;\r\n        const { song } = this.props.playQueue;\r\n        const duration = song.duration || song.dt;\r\n        return(\r\n            <footer key=\"player\">\r\n                <audio\r\n                    key=\"audio\"\r\n                    src={song.url}\r\n                    ref={(node) =>{\r\n                        this.audio=node\r\n                    }}\r\n                    onTimeUpdate={this.syncTime}\r\n                    >\r\n                    您的浏览器不支持audio标签，无法播放音乐\r\n                </audio>\r\n                <div className=\"player-album\">\r\n                    <Link to={{ pathname:`/lyric/${song.id}`}}>\r\n                        <img src={song.album.picUrl} alt=\"album-img\"/>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"player-btns\">\r\n                    <Icon type=\"backward\" />\r\n                    <Icon type={ppIcon} onClick={this.togglePlay} />\r\n                    <Icon type=\"forward\" />\r\n                </div>\r\n                <div className=\"player-state\">\r\n                    <div className=\"player-state-top\">\r\n                        <span className=\"name\">{song.name}</span>\r\n                        <div className=\"artist\">\r\n                            <Link to=\"\">\r\n                                {\"花粥\"}\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"duration\">\r\n                            {this.state.cdt}/{formatDuration(duration)}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"player-state-bottom\">\r\n                        <div\r\n                            className=\"progress-bar\"\r\n                            ref={(node) =>{\r\n                                this.progressBar = node;\r\n                            }}\r\n                            onClick={(e) =>{\r\n                                this.setCurTime(e);\r\n                            }}\r\n                        >\r\n                            <div\r\n                                className=\"current-progress\" style={{width:`${curProgressBarWidth}`}}\r\n\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"vol-wrapper\">\r\n                    <div className=\"vol\">\r\n                        <span\r\n                            onClick={this.toggleMute}\r\n                        >\r\n                            {volumeIcon}\r\n                        </span>\r\n                        <div\r\n                            className=\"vol-bar\"\r\n                            onClick={this.setVol}\r\n                            ref={(node) =>{\r\n                                this.valBar=node\r\n                            }}\r\n                        >\r\n                            <div className=\"current-vol\" style={{width:`10%`}} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"player-extra\">\r\n                    <div className=\"mode-title\">\r\n                        {modeIcon}\r\n                    </div>\r\n                    <Icon type=\"heart-o\"/>\r\n                    <Icon type=\"bars\"/>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\nconst mapState = (state) =>{\r\n    return{\r\n        playQueue: state.playQueue\r\n    }\r\n};\r\nconst mapDispatch = (dispatch) =>({\r\n    indexChangeSong(){\r\n        dispatch(actionCreators.changeSong());\r\n    },\r\n    indexUpdatePlayerStatus(status){\r\n        dispatch(actionCreators.updatePlayerStatus(status));\r\n    }\r\n});\r\nexport default connect(mapState,mapDispatch)(Footer);\r\n"]},"metadata":{},"sourceType":"module"}