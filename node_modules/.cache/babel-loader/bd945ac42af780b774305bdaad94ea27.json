{"ast":null,"code":"import _classCallCheck from \"H:\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"H:\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"H:\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"H:\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"H:\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"H:\\\\react-music-player\\\\src\\\\views\\\\SearchSong\\\\index.js\";\nimport React, { Component } from 'react'; // import InfoList from '@components/List';\n\nimport { connect } from 'react-redux';\nimport * as actionCreators from './store/actionCreators';\n\nvar SearchSong =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchSong, _Component);\n\n  function SearchSong(props) {\n    var _this;\n\n    _classCallCheck(this, SearchSong);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchSong).call(this, props));\n    var name = _this.props.match.params.name;\n    _this.state = {\n      value: name\n    };\n    return _this;\n  }\n\n  _createClass(SearchSong, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.indexHandleChangeSong(this.state.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"123\");\n    }\n  }]);\n\n  return SearchSong;\n}(Component);\n\nvar mapState = function mapState(state) {\n  return {\n    song: state.song\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    indexHandleChangeSong: function indexHandleChangeSong(value) {\n      dispatch(actionCreators.handleSeachSong(value));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(SearchSong);","map":{"version":3,"sources":["H:\\react-music-player\\src\\views\\SearchSong\\index.js"],"names":["React","Component","connect","actionCreators","SearchSong","props","name","match","params","state","value","indexHandleChangeSong","mapState","song","mapDispatch","dispatch","handleSeachSong"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,cAAZ,MAAgC,wBAAhC;;IAEMC,U;;;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;AADe,QAEPC,IAFO,GAEE,MAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAFnB,CAEPF,IAFO;AAGf,UAAKG,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAEJ;AADE,KAAb;AAHe;AAMlB;;;;wCACmB;AAChB,WAAKD,KAAL,CAAWM,qBAAX,CAAiC,KAAKF,KAAL,CAAWC,KAA5C;AACH;;;6BACQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ;AAGH;;;;EAfoBT,S;;AAiBzB,IAAMW,QAAQ,GAAG,SAAXA,QAAW,CAACH,KAAD;AAAA,SAAY;AACzBI,IAAAA,IAAI,EAAEJ,KAAK,CAACI;AADa,GAAZ;AAAA,CAAjB;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAAe;AAC/BJ,IAAAA,qBAD+B,iCACTD,KADS,EACF;AACzBK,MAAAA,QAAQ,CAACZ,cAAc,CAACa,eAAf,CAA+BN,KAA/B,CAAD,CAAR;AACH;AAH8B,GAAf;AAAA,CAApB;;AAKA,eAAeR,OAAO,CAACU,QAAD,EAAWE,WAAX,CAAP,CAA+BV,UAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\r\n// import InfoList from '@components/List';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from './store/actionCreators';\r\n\r\nclass SearchSong extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { name } = this.props.match.params;\r\n        this.state = {\r\n            value: name\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.indexHandleChangeSong(this.state.value);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>123</div>\r\n        )\r\n    }\r\n}\r\nconst mapState = (state) => ({\r\n    song: state.song\r\n});\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n    indexHandleChangeSong(value) {\r\n        dispatch(actionCreators.handleSeachSong(value))\r\n    }\r\n});\r\nexport default connect(mapState, mapDispatch)(SearchSong);"]},"metadata":{},"sourceType":"module"}