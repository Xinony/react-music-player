{"ast":null,"code":"import _classCallCheck from \"H:\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"H:\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"H:\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"H:\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"H:\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"H:\\\\react-music-player\\\\src\\\\views\\\\FindMusic\\\\index.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Tabs from '@components/Tabs';\nimport MinorTitle from '@components/MinorTitle';\nimport * as actionCreators from './store/actionCreators';\nimport PlayList from './PlayList';\nimport Explore from './Explore';\nimport './style.less';\nvar TabPanel = Tabs.TabPanel;\n\nvar FindMusic =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FindMusic, _React$Component);\n\n  function FindMusic() {\n    _classCallCheck(this, FindMusic);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FindMusic).apply(this, arguments));\n  }\n\n  _createClass(FindMusic, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$findMusic = this.props.findMusic,\n          swiperImg = _this$props$findMusic.swiperImg,\n          cardList = _this$props$findMusic.cardList;\n      console.log(swiperImg, cardList);\n\n      if (!cardList.length && !swiperImg.length) {\n        this.props.IndexFetchCardList();\n        this.props.IndexFetchSwiperImg();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$findMusic2 = this.props.findMusic,\n          swiperImg = _this$props$findMusic2.swiperImg,\n          cardList = _this$props$findMusic2.cardList;\n      return React.createElement(\"div\", {\n        className: \"find-music\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(MinorTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"\\u53D1\\u73B0\\u97F3\\u4E50\"), React.createElement(Tabs, {\n        defaultActiveIndex: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(TabPanel, {\n        tab: \"\\u4E2A\\u6027\\u63A8\\u8350\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Explore, {\n        data: swiperImg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })), React.createElement(TabPanel, {\n        tab: \"\\u6B4C\\u5355\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(PlayList, {\n        data: cardList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return FindMusic;\n}(React.Component);\n\nvar mapState = function mapState(state) {\n  return {\n    findMusic: state.findMusic\n  };\n};\n\nvar mapDispath = function mapDispath(dispatch) {\n  return {\n    IndexFetchCardList: function IndexFetchCardList() {\n      dispatch(actionCreators.fetchCardList(30));\n    },\n    IndexFetchSwiperImg: function IndexFetchSwiperImg() {\n      dispatch(actionCreators.getList());\n    }\n  };\n};\n\nexport default withRouter(connect(mapState, mapDispath)(FindMusic));","map":{"version":3,"sources":["H:\\react-music-player\\src\\views\\FindMusic\\index.js"],"names":["React","withRouter","connect","Tabs","MinorTitle","actionCreators","PlayList","Explore","TabPanel","FindMusic","props","findMusic","swiperImg","cardList","console","log","length","IndexFetchCardList","IndexFetchSwiperImg","Component","mapState","state","mapDispath","dispatch","fetchCardList","getList"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAO,KAAKC,cAAZ,MAAgC,wBAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,cAAP;IAEQC,Q,GAAaL,I,CAAbK,Q;;IACFC,S;;;;;;;;;;;;;wCACkB;AAAA,kCACgB,KAAKC,KAAL,CAAWC,SAD3B;AAAA,UACRC,SADQ,yBACRA,SADQ;AAAA,UACGC,QADH,yBACGA,QADH;AAEhBC,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAAsBC,QAAtB;;AACA,UAAI,CAACA,QAAQ,CAACG,MAAV,IAAoB,CAACJ,SAAS,CAACI,MAAnC,EAA2C;AACvC,aAAKN,KAAL,CAAWO,kBAAX;AACA,aAAKP,KAAL,CAAWQ,mBAAX;AACH;AACJ;;;6BACO;AAAA,mCAC4B,KAAKR,KAAL,CAAWC,SADvC;AAAA,UACIC,SADJ,0BACIA,SADJ;AAAA,UACeC,QADf,0BACeA,QADf;AAEJ,aACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,kBAAkB,EAAE,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAED,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CAFJ,CADJ;AAaH;;;;EAxBmBb,KAAK,CAACmB,S;;AA0B9B,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAU;AACvB,SAAQ;AACJV,IAAAA,SAAS,EAAEU,KAAK,CAACV;AADb,GAAR;AAGH,CAJD;;AAKA,IAAMW,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD;AAAA,SAAc;AAC7BN,IAAAA,kBAD6B,gCACT;AAChBM,MAAAA,QAAQ,CAAClB,cAAc,CAACmB,aAAf,CAA6B,EAA7B,CAAD,CAAR;AACH,KAH4B;AAI7BN,IAAAA,mBAJ6B,iCAIR;AACjBK,MAAAA,QAAQ,CAAClB,cAAc,CAACoB,OAAf,EAAD,CAAR;AACH;AAN4B,GAAd;AAAA,CAAnB;;AAQA,eAAexB,UAAU,CAACC,OAAO,CAACkB,QAAD,EAAUE,UAAV,CAAP,CAA6Bb,SAA7B,CAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Tabs from '@components/Tabs';\r\nimport MinorTitle from '@components/MinorTitle';\r\nimport * as actionCreators from './store/actionCreators';\r\nimport PlayList from './PlayList';\r\nimport Explore from './Explore';\r\nimport './style.less';\r\n\r\nconst { TabPanel } = Tabs;\r\nclass FindMusic extends React.Component{\r\n    componentDidMount() {\r\n        const { swiperImg, cardList } = this.props.findMusic;\r\n        console.log(swiperImg,cardList);\r\n        if (!cardList.length && !swiperImg.length) {\r\n            this.props.IndexFetchCardList();\r\n            this.props.IndexFetchSwiperImg();\r\n        }\r\n    }\r\n    render(){\r\n        const { swiperImg, cardList } = this.props.findMusic;\r\n        return(\r\n            <div className=\"find-music\">\r\n                <MinorTitle>发现音乐</MinorTitle>\r\n                <Tabs defaultActiveIndex={1}>\r\n                    <TabPanel tab=\"个性推荐\">\r\n                        <Explore data={swiperImg} />\r\n                    </TabPanel>\r\n                    <TabPanel tab=\"歌单\">\r\n                        <PlayList data={cardList} />\r\n                    </TabPanel>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapState = (state) =>{\r\n    return ({\r\n        findMusic: state.findMusic,\r\n    })\r\n}\r\nconst mapDispath = (dispatch) =>({\r\n    IndexFetchCardList(){\r\n        dispatch(actionCreators.fetchCardList(30))\r\n    },\r\n    IndexFetchSwiperImg(){\r\n        dispatch(actionCreators.getList())\r\n    }\r\n});\r\nexport default withRouter(connect(mapState,mapDispath)(FindMusic));\r\n"]},"metadata":{},"sourceType":"module"}