{"ast":null,"code":"import _classCallCheck from \"H:\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"H:\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"H:\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"H:\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"H:\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"H:\\\\react-music-player\\\\src\\\\views\\\\SearchSong\\\\index.js\";\nimport React, { Component } from 'react'; // import InfoList from '@components/List';\n\nimport { connect } from 'react-redux';\nimport * as actionCreators from './store/actionCreators';\n\nvar SearchSong =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchSong, _Component);\n\n  function SearchSong() {\n    _classCallCheck(this, SearchSong);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SearchSong).apply(this, arguments));\n  }\n\n  _createClass(SearchSong, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.indexHandleChangeSong(this.state.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var name = this.props.match.params.name;\n      var song = this.props.song.song;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, console.log(name), console.log(song));\n    }\n  }]);\n\n  return SearchSong;\n}(Component);\n\nvar mapState = function mapState(state) {\n  return {\n    song: state.song\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    indexHandleChangeSong: function indexHandleChangeSong(value) {\n      dispatch(actionCreators.handleSeachSong(value));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(SearchSong);","map":{"version":3,"sources":["H:\\react-music-player\\src\\views\\SearchSong\\index.js"],"names":["React","Component","connect","actionCreators","SearchSong","props","indexHandleChangeSong","state","value","name","match","params","song","console","log","mapState","mapDispatch","dispatch","handleSeachSong"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,cAAZ,MAAgC,wBAAhC;;IAEMC,U;;;;;;;;;;;;;yCACkB;AAChB,WAAKC,KAAL,CAAWC,qBAAX,CAAiC,KAAKC,KAAL,CAAWC,KAA5C;AACH;;;6BACQ;AAAA,UACGC,IADH,GACY,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAD7B,CACGF,IADH;AAAA,UAEGG,IAFH,GAEY,KAAKP,KAAL,CAAWO,IAFvB,CAEGA,IAFH;AAGL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCC,OAAO,CAACC,GAAR,CAAYL,IAAZ,CADD,EAECI,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFD,CADJ;AAMH;;;;EAboBX,S;;AAezB,IAAMc,QAAQ,GAAG,SAAXA,QAAW,CAACR,KAAD;AAAA,SAAY;AACzBK,IAAAA,IAAI,EAAEL,KAAK,CAACK;AADa,GAAZ;AAAA,CAAjB;;AAIA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAAe;AAC/BX,IAAAA,qBAD+B,iCACTE,KADS,EACF;AACzBS,MAAAA,QAAQ,CAACd,cAAc,CAACe,eAAf,CAA+BV,KAA/B,CAAD,CAAR;AACH;AAH8B,GAAf;AAAA,CAApB;;AAKA,eAAeN,OAAO,CAACa,QAAD,EAAWC,WAAX,CAAP,CAA+BZ,UAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\r\n// import InfoList from '@components/List';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from './store/actionCreators';\r\n\r\nclass SearchSong extends Component {\r\n    componentWillMount(){\r\n        this.props.indexHandleChangeSong(this.state.value);\r\n    }\r\n    render() {\r\n        const { name } = this.props.match.params;\r\n        const { song } = this.props.song\r\n        return (\r\n            <div>\r\n            {console.log(name)}\r\n            {console.log(song)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapState = (state) => ({\r\n    song: state.song\r\n});\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n    indexHandleChangeSong(value) {\r\n        dispatch(actionCreators.handleSeachSong(value))\r\n    }\r\n});\r\nexport default connect(mapState, mapDispatch)(SearchSong);"]},"metadata":{},"sourceType":"module"}