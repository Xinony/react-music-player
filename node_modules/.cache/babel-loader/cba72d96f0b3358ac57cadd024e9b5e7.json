{"ast":null,"code":"import _classCallCheck from \"H:\\\\music\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"H:\\\\music\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"H:\\\\music\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"H:\\\\music\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"H:\\\\music\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"H:\\\\music\\\\react-music-player\\\\src\\\\components\\\\Menu\\\\index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Icon } from 'antd';\nimport * as actionCreators from '../../common/store/actionCreators';\nimport CollectBlock from './CollectBlock';\nimport './style.less';\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Menu, _Component);\n\n  function Menu(props) {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Menu).call(this, props));\n\n    _this.setMenuClass = function (isShow) {\n      return isShow ? 'menu' : 'menu hide';\n    };\n\n    _this.setMenuIconType = function (isShow) {\n      return isShow ? 'menu-fold' : 'menu-unfold';\n    };\n\n    _this.toggleMenu = function () {\n      _this.setState({\n        isShow: !_this.state.isShow\n      });\n    };\n\n    _this.state = {\n      isShow: true\n    };\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.IndexinitStarredList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isShow = this.state.isShow;\n      var _this$props = this.props,\n          children = _this$props.children,\n          starredList = _this$props.starredList;\n      return React.createElement(\"div\", {\n        className: this.setMenuClass(isShow),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: this.setMenuIconType(isShow),\n        onClick: this.toggleMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"nav\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"nav-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.Children.map(children, function (link) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, link);\n      }))), isShow ? React.createElement(CollectBlock, {\n        starredList: starredList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return Menu;\n}(Component);\n\nvar mapState = function mapState(state) {\n  return {\n    starredList: state.playQueue.starredList\n  };\n};\n\nvar mapDispath = function mapDispath(dispatch) {\n  return {\n    IndexinitStarredList: function IndexinitStarredList() {\n      dispatch(actionCreators.initStarredList());\n    }\n  };\n};\n\nexport default withRouter(connect(mapState, mapDispath)(Menu));","map":{"version":3,"sources":["H:\\music\\react-music-player\\src\\components\\Menu\\index.js"],"names":["React","Component","withRouter","connect","Icon","actionCreators","CollectBlock","Menu","props","setMenuClass","isShow","setMenuIconType","toggleMenu","setState","state","IndexinitStarredList","children","starredList","Children","map","link","mapState","playQueue","mapDispath","dispatch","initStarredList"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAO,KAAKC,cAAZ,MAAgC,mCAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,cAAP;;IAEMC,I;;;;;AACF,gBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8EAAMA,KAAN;;AADc,UAUlBC,YAVkB,GAUH,UAACC,MAAD;AAAA,aAAaA,MAAM,GAAG,MAAH,GAAY,WAA/B;AAAA,KAVG;;AAAA,UAYlBC,eAZkB,GAYA,UAAAD,MAAM;AAAA,aAAKA,MAAM,GAAG,WAAH,GAAiB,aAA5B;AAAA,KAZN;;AAAA,UAclBE,UAdkB,GAcL,YAAK;AACd,YAAKC,QAAL,CAAc;AACVH,QAAAA,MAAM,EAAC,CAAC,MAAKI,KAAL,CAAWJ;AADT,OAAd;AAGH,KAlBiB;;AAEd,UAAKI,KAAL,GAAW;AACPJ,MAAAA,MAAM,EAAC;AADA,KAAX;AAFc;AAKjB;;;;wCACkB;AACf,WAAKF,KAAL,CAAWO,oBAAX;AACH;;;6BAYO;AAAA,UACIL,MADJ,GACe,KAAKI,KADpB,CACIJ,MADJ;AAAA,wBAE8B,KAAKF,KAFnC;AAAA,UAEIQ,QAFJ,eAEIA,QAFJ;AAAA,UAEcC,WAFd,eAEcA,WAFd;AAGJ,aACI;AAAK,QAAA,SAAS,EAAE,KAAKR,YAAL,CAAkBC,MAAlB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKC,eAAL,CAAqBD,MAArB,CAAZ;AAA0C,QAAA,OAAO,EAAE,KAAKE,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BZ,KAAK,CAACkB,QAAN,CAAeC,GAAf,CAAmBH,QAAnB,EAA6B,UAAAI,IAAI;AAAA,eAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,IAAL,CAAJ;AAAA,OAAjC,CAA1B,CADJ,CAFA,EAKHV,MAAM,GAAG,oBAAC,YAAD;AAAc,QAAA,WAAW,EAAEO,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAAgD,IALnD,CADJ;AASH;;;;EAjCchB,S;;AAmCnB,IAAMoB,QAAQ,GAAG,SAAXA,QAAW,CAACP,KAAD;AAAA,SAAW;AACxBG,IAAAA,WAAW,EAAEH,KAAK,CAACQ,SAAN,CAAgBL;AADL,GAAX;AAAA,CAAjB;;AAGA,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD;AAAA,SAAc;AAC7BT,IAAAA,oBAD6B,kCACP;AAClBS,MAAAA,QAAQ,CAACnB,cAAc,CAACoB,eAAf,EAAD,CAAR;AACH;AAH4B,GAAd;AAAA,CAAnB;;AAKA,eAAevB,UAAU,CAACC,OAAO,CAACkB,QAAD,EAAUE,UAAV,CAAP,CAA6BhB,IAA7B,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Icon } from 'antd';\r\nimport * as actionCreators from '../../common/store/actionCreators'\r\nimport CollectBlock from './CollectBlock'\r\nimport './style.less';\r\n\r\nclass Menu extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isShow:true\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.props.IndexinitStarredList()\r\n    }\r\n\r\n    setMenuClass = (isShow) => (isShow ? 'menu' : 'menu hide');\r\n\r\n    setMenuIconType = isShow => (isShow ? 'menu-fold' : 'menu-unfold');\r\n\r\n    toggleMenu = () =>{\r\n        this.setState({\r\n            isShow:!this.state.isShow\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const { isShow } = this.state;\r\n        const { children, starredList } = this.props\r\n        return(\r\n            <div className={this.setMenuClass(isShow)}>\r\n                <Icon type={this.setMenuIconType(isShow)} onClick={this.toggleMenu} />\r\n            <nav>\r\n                <ul className=\"nav-list\">{React.Children.map(children, link => <li>{link}</li>)}</ul>\r\n                </nav>\r\n        {isShow ? <CollectBlock starredList={starredList} /> : null}\r\n      </div>\r\n        )\r\n    }\r\n}\r\nconst mapState = (state) =>({\r\n    starredList: state.playQueue.starredList\r\n});\r\nconst mapDispath = (dispatch) =>({\r\n    IndexinitStarredList(){\r\n        dispatch(actionCreators.initStarredList())\r\n    }\r\n});\r\nexport default withRouter(connect(mapState,mapDispath)(Menu));\r\n"]},"metadata":{},"sourceType":"module"}