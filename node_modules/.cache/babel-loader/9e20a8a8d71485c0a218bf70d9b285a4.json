{"ast":null,"code":"import _classCallCheck from \"H:\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"H:\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"H:\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"H:\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"H:\\\\react-music-player\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"H:\\\\react-music-player\\\\src\\\\components\\\\LoadableImage\\\\index.js\";\nimport React, { Component, Fragment } from 'react';\nimport Spin from '../Spin';\n\nvar LoadableImage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoadableImage, _Component);\n\n  function LoadableImage(props) {\n    var _this;\n\n    _classCallCheck(this, LoadableImage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoadableImage).call(this, props));\n\n    _this.handleImageLoaded = function () {\n      _this.setState({\n        loading: false\n      });\n    };\n\n    _this.state = {\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(LoadableImage, [{\n    key: \"render\",\n    value: function render() {\n      var loading = this.state.loading;\n      var _this$props = this.props,\n          imgUrl = _this$props.imgUrl,\n          altText = _this$props.altText;\n      var display = loading ? 'none' : 'block';\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Spin, {\n        spinning: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: imgUrl,\n        alt: altText,\n        onLoad: this.handleImageLoaded,\n        style: {\n          display: display\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return LoadableImage;\n}(Component);\n\nexport default LoadableImage;","map":{"version":3,"sources":["H:\\react-music-player\\src\\components\\LoadableImage\\index.js"],"names":["React","Component","Fragment","Spin","LoadableImage","props","handleImageLoaded","setState","loading","state","imgUrl","altText","display"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,SAAjB;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;;AADiB,UAOnBC,iBAPmB,GAOC,YAAM;AACxB,YAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAXkB;;AAEjB,UAAKC,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAE;AADE,KAAb;AAFiB;AAKlB;;;;6BAQQ;AAAA,UACCA,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAAA,wBAEqB,KAAKH,KAF1B;AAAA,UAECK,MAFD,eAECA,MAFD;AAAA,UAESC,OAFT,eAESA,OAFT;AAGP,UAAMC,OAAO,GAAGJ,OAAO,GAAG,MAAH,GAAY,OAAnC;AACA,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAEA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEE,MAAV;AAAkB,QAAA,GAAG,EAAEC,OAAvB;AAAgC,QAAA,MAAM,EAAE,KAAKL,iBAA7C;AAAgE,QAAA,KAAK,EAAE;AAAEM,UAAAA,OAAO,EAAPA;AAAF,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAOD;;;;EAzByBX,S;;AA2B5B,eAAeG,aAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport Spin from '../Spin'\r\n\r\nclass LoadableImage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading: true,\r\n    }\r\n  }\r\n\r\n  handleImageLoaded = () => {\r\n    this.setState({\r\n      loading: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state\r\n    const { imgUrl, altText } = this.props\r\n    const display = loading ? 'none' : 'block'\r\n    return (\r\n      <Fragment>\r\n        <Spin spinning={loading}>\r\n          <img src={imgUrl} alt={altText} onLoad={this.handleImageLoaded} style={{ display }} />\r\n        </Spin>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\nexport default LoadableImage;\r\n"]},"metadata":{},"sourceType":"module"}